# ==============================================================================
# CD Workflow: Deploy to Production Environment
# ==============================================================================
# Trigger: Push to main branch (with manual approval)
# Purpose: Deploy to production with safety checks
# ==============================================================================

name: CD - Deploy to Production

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy-prod:
    name: Deploy to Production
    runs-on: ubuntu-latest
    environment:
      name: production
      # This will pause and require manual approval in GitHub

    steps:
      # ----------------------------------------------------------------------
      # Step 1: Checkout repository
      # ----------------------------------------------------------------------
      - name: Checkout code
        uses: actions/checkout@v4

      # ----------------------------------------------------------------------
      # Step 2: Setup Databricks CLI
      # ----------------------------------------------------------------------
      - name: Setup Databricks CLI
        uses: databricks/setup-cli@main

      # ----------------------------------------------------------------------
      # Step 3: Validate bundle configuration
      # ----------------------------------------------------------------------
      - name: Validate Bundle
        run: databricks bundle validate --target prod
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
          DATABRICKS_CLIENT_ID: ${{ secrets.DATABRICKS_CLIENT_ID }}
          DATABRICKS_CLIENT_SECRET: ${{ secrets.DATABRICKS_CLIENT_SECRET }}

      # ----------------------------------------------------------------------
      # Step 4: Deploy bundle to production
      # ----------------------------------------------------------------------
      - name: Deploy Bundle
        run: databricks bundle deploy --target prod
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
          DATABRICKS_CLIENT_ID: ${{ secrets.DATABRICKS_CLIENT_ID }}
          DATABRICKS_CLIENT_SECRET: ${{ secrets.DATABRICKS_CLIENT_SECRET }}

      # ----------------------------------------------------------------------
      # Step 5: Verify deployment health
      # ----------------------------------------------------------------------
      - name: Verify Pipeline Health
        run: |
          echo "Checking pipeline deployment status..."
          databricks bundle validate --target prod
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
          DATABRICKS_CLIENT_ID: ${{ secrets.DATABRICKS_CLIENT_ID }}
          DATABRICKS_CLIENT_SECRET: ${{ secrets.DATABRICKS_CLIENT_SECRET }}

      # ----------------------------------------------------------------------
      # Step 6: Production deployment notification
      # ----------------------------------------------------------------------
      - name: Deployment Summary
        run: |
          echo "üöÄ PRODUCTION DEPLOYMENT COMPLETED"
          echo "=================================="
          echo "‚úÖ Deployment successful"
          echo "üîó Workspace: ${{ secrets.DATABRICKS_HOST }}"
          echo "üì¶ Bundle: uber-eats-analytics"
          echo "üéØ Target: prod"
          echo "üè∑Ô∏è  Commit: ${{ github.sha }}"
          echo "üë§ Deployed by: ${{ github.actor }}"

  # Optional: Create a GitHub Release
  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: deploy-prod
    if: github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: prod-${{ github.run_number }}
          release_name: Production Release ${{ github.run_number }}
          body: |
            Production deployment completed successfully.

            **Commit**: ${{ github.sha }}
            **Deployed by**: ${{ github.actor }}
            **Timestamp**: ${{ github.event.head_commit.timestamp }}
          draft: false
          prerelease: false
